name: Merge to Production and Release
# Credits:
# - https://medium.com/@_samkitjain/override-githubs-merge-strategies-cea7eb789e23
# - https://stackoverflow.com/a/73907863/279566

on:
  pull_request_review:
    types: [submitted]

jobs:
  merge:
    # Run only if the review was made on a PR to production
    if: |
      github.event.pull_request.base.ref == 'production' &&
      github.event.pull_request.head.ref == 'main' &&
      github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      # Get details of the PR, specifically whether the PR can be merged in or not.
      - name: Get PR details
        id: get-pr-details
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/{repository}/pulls/{pull_number}
          repository: ${{ github.repository }}
          pull_number: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      # Merge (rebase) the PR if it is allowed.
      - name: Merge PR
        id: merge-pr
        shell: bash
        env:
          MERGEABLE_STATUS: ${{ fromJson(steps.get-pr-details.outputs.data).mergeable_state }}
        run: |
          if [ "$MERGEABLE_STATUS" = "clean" ]; then
            git config --global user.email "<>"
            git config --global user.name "GitHub Actions"
            git checkout main
            git pull origin main
            git checkout production
            git pull origin production
            git merge main --ff-only
            git push origin production
            echo "MERGE_RESULT='Pull request has been merged and will be deployed to production shortly.'" >> $GITHUB_OUTPUT
          else
            echo "MERGE_RESULT='Pull request was approved before being mergeable. Please rectify and try again.'" >> $GITHUB_OUTPUT
          fi

      # Create a new release if no previous steps failed.
      - name: Create Release
        id: create-release
        if: ${{ !failure() }}
        uses: softprops/action-gh-release@v1
        with:
          name: $(date +'%Y-%m-%d_%H:%M:%S')

      # Post a success/failure comment to the PR.
      - name: Add comment to PR
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/{repository}/issues/{issue_number}/comments
          repository: ${{ github.repository }}
          issue_number: ${{ github.event.issue.number }}
          body: |
            ${{ steps.merge-pr.outputs.MERGE_RESULT }}
            ${{ steps.create-release.outputs.url && ' Release created at: ' || '' }}
            ${{ steps.create-release.outputs.url && steps.create-release.outputs.url || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
