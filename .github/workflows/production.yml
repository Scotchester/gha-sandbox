name: Merge to Production and Release
# Credits:
# - https://medium.com/@_samkitjain/override-githubs-merge-strategies-cea7eb789e23
# - https://dev.to/zirkelc/trigger-github-workflow-for-comment-on-pull-request-45l2
# - https://stackoverflow.com/a/73907863/279566

on:
  issue_comment:
    types: [created]

jobs:
  merge-and-release:
    # Run only if:
    # 1. The comment was made on a PR.
    # 2. The comment was exactly "PTS".
    # 3. The PR is open.
    # 4. The comment was made by a member of our team.
    if: |
      github.event.issue.pull_request &&
      github.event.comment.body == 'PTS' &&
      github.event.issue.state == 'open' &&
      contains(fromJSON('["addisonhardy", "laespinoza", "jamesray", "Scotchester", "stephiescastle"]'), github.event.comment.user.login)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set current date as environment variable
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d_%H%M%S')" >> $GITHUB_ENV

      # Get details of the PR, specifically whether the PR can be merged in or not.
      - name: Get PR details
        id: get-pr-details
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Merge (fast-forward only) the PR if it is from main to production and is mergeable.
      - name: Merge PR
        id: merge-pr
        shell: bash
        env:
          MERGEABLE_STATUS: ${{ fromJson(steps.get-pr-details.outputs.data).mergeable_state }}
          BASE_BRANCH: ${{ fromJson(steps.get-pr-details.outputs.data).base.ref }}
          HEAD_BRANCH: ${{ fromJson(steps.get-pr-details.outputs.data).head.ref }}
        run: |
          if [[ "$MERGEABLE_STATUS" == "clean" && "$HEAD_BRANCH" == "main" && "$BASE_BRANCH" == "production" ]]; then
            echo "✅ merge conditions passed"
            git config --global user.email "<>"
            git config --global user.name "GitHub Actions"
            git checkout $HEAD_BRANCH
            git pull origin $HEAD_BRANCH
            git checkout $BASE_BRANCH
            git pull origin $BASE_BRANCH
            git merge $HEAD_BRANCH --ff-only
            git push origin $BASE_BRANCH
            echo "COMMENT=Pull request has been merged and will be deployed to Production shortly." >> $GITHUB_OUTPUT
            echo "MERGE_RESULT=merged" >> $GITHUB_OUTPUT
          else
            echo "❌ merge conditions failed"
            echo "COMMENT=Merge command failed. This PR is either not yet mergeable or is not from main to production." >> $GITHUB_OUTPUT
            echo "MERGE_RESULT=not merged" >> $GITHUB_OUTPUT
          fi

      # Create a new release if no previous steps failed and the PR was merged.
      - name: Create Release
        id: create-release
        if: steps.merge-pr.outputs.MERGE_RESULT == 'merged'
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.TIMESTAMP }}
          tag_name: ${{ env.TIMESTAMP }}


      # Post a success/failure comment to the PR.
      - name: Add comment to PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ${{ steps.merge-pr.outputs.COMMENT }}

            ${{ steps.create-release.outputs.url && 'Release created at: ' || 'No release has been created.' }}
            ${{ steps.create-release.outputs.url && steps.create-release.outputs.url || '' }}
